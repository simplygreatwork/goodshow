
work out the concept of PIXI.Layer
   a layer will have a PIXI canvas paired with DOM floating above
   many of these layers can be stacked
   also, explore moving DisplayObjects between PIXI canvases
   be able to dynamically spawn layers on the fly
   
   but still consider using many small PIXI canvas elements

https://www.google.com/search?q=can+html+be+render+into+webgl&rlz=1CAACAV_enUS759US759&oq=can+html+be+render+into+webgl&aqs=chrome..69i57j69i64.21032j0j7&sourceid=chrome&ie=UTF-8

pertaining to enhance vs transform
   in general, we always want to be able to tweak an entity after it has been rendered
   so for enhance options - go ahead and merge but then reinstall the entity
   
one mission of goodshow and simplygreatwork overall
   avoid elaborate

finish refactoring alpha tween (good and done)

Panel control code looks messy
   any potential for more Object.assign goodness or some kind of resolver?
   ideas at: https://stackoverflow.com/questions/11704267/in-javascript-how-to-conditionally-add-a-member-to-an-object/38483660
   
add icons in each master panel to link to the source
   identify the best icon to represent source code
   started a few panels - need to finish

switch from ancestor/Broadcast to ancestor/emit

refactor miller panels to support arbitrary pluggable or overridable tweens

use a single font styling config: font : {...}
   means I likely would need a sub-expander

add more miller views to "Arrange" panel: flex, flow, fixed, in addition to the existing: inherit
   remove Text & Image
   
illustrate enhance panel
   
change "draw" references to "update" for components and entities

attempt to get cards to inherit extent and flow extent

add many more robust examples to illustrate Markup
   a basic rich text document
   a text element for to allow editing
   incorporate other aspects such as scrolling, clipping, and even transforming
   and markdown
   
be able to register component types for the Graphics entity
   
work on more complex parts
   list item layouts, card layouts, dialog layouts

work on a realistic pharma filtering app with filtering right sidebar

add escape to exit dialog, drawer, etc. (not really "next" material but pleasing anyway)